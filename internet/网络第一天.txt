6天的网络

1、UDP编程
2、TCP编程
3、多路复用
4、广播、组播
5，数据库
6、项目

自我介绍:李相山

IO、进程线程、数据结构的简单使用

OSI模型:
应用层:http tftp telnet 
表示层:
会话层:建立连接，保持连接，断开连接
传输层:UDP用户数据报协议 TCP传输控制协议
网络层:IP ICMP IGMP 作用:ip寻址
链路层:ARP将ip地址转化为mac地址  RARP
物理层:将上面的数据转化为二进制通过网线发送出去

TCP/IP模型
应用层
传输层
网络层
网络接口和物理层

linux环境下的内存管理:
使用的是虚拟内存――用户空间3G，内核空间1G

用户空间
		应用层
内核空间
		传输层、网络层
硬件
		网络接口和物理层


数据帧:以太网头(源mac地址和目的mac地址)+IP协议头(源ip和目的ip)+UDP协议头(源端口和目的端口)+应用层协议头+数据+crc校验码

ip:ipv4
基本类(A B C 由网络号和主机号组成)，特殊类(D E不区分网络号和主机号)

A：1字节网络号  + 3字节主机号   二进制以0开头的
   0xxxxxxx      xxxxxxxx xxxxxxxx xxxxxxxx

   0.0.0.0   -  127.255.255.255

   特殊ip:0.0.0.0 可以代表本地中的任意ip地址
		  以127开头的ip地址,用来检测本地的网卡和tcp协议是否安装成功，数据帧到达网络层会返回。
		  
		  主机号全为0的ip地址单纯代表了一个网段，不能用来表示主机。
		  主机号全为1代表广播地址，也不能用来表示主机
		  
		  10.x.x.x 大型局域网，不能出现在外网中

B: 2 + 2  二进制以10开头 
	10xxxxxx xxxxxxxx      xxxxxxxx xxxxxxxx	
	
	128.0.0.0 - 191.255.255.255 
	
	子网掩码:32位中由连续的1和连续的0组成
	子网掩码 & ip地址 获得了网络号
	~子网掩码 & ip地址 获得了主机号
	
	中型局域网:172.16.x.x - 172.31.x.x 
	
C:3 + 1  二进制以110开头
	110xxxxx xxxxxxxx xxxxxxxx      xxxxxxxx
	
	192.0.0.0 - 223.255.255.255 
	
	小型局域网:192.168.x.x 
	
	
D:不区分网络号和主机号  以1110开头
	1110xxxx xxxxxxxx xxxxxxxx xxxxxxxx
	224.0.0.0 - 239.255.255.255 不能用来表示具体的某台主机，用于组播通信的

E:不区分网络号和主机号  以11110开头
	

端口:
字节序:网络字节序(一定是大端序)和主机字节序(大端或者小端)
低地址存低字节是小端序。
低地址存高字节是大端序。

int a = 0x12345678;
char *p = (char *)&a;

printf("%#x\n",*p);
printf("%#x\n",*(p+1));

udp的接口:
socket本身是一个函数接口，可以帮助我们获得特殊的文件描述符，这个文件描述符的作用是在本地携带应用层的数据最终交给网卡。
bind();


发送端――主动发送的是客户端
1、创建套接字socket();
2、填充对方的地址信息，同时填充自己的地址信息(选择填充)
3、绑定自己的地址信息(如果没有填充自己的地址信息，则绑定操作不需要)   一定要注意:只能绑定自己的地址结构
4、发送数据 sendto(sockfd,buf,strlen(buf),0,&addr,len);
			参数:
			sockfd:套接字文件描述符
			buf:存放需要发送数据的空间
			strlen(buf):需要发送数据的具体长度
			addr:对方的地址信息。
			len:对方地址结构的大小

接收端――主动接收的是服务器
1、创建套接字socket();
2、填充自己的(服务器的)地址信息
3、绑定自己的(服务器)地址信息
	
   